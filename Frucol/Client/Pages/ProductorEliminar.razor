@page "/ProductorEliminar/{id:int}"
@using Models
@inject NavigationManager navigation

<h3>Eliminar productor</h3>
<h4>Esta seguro de eliminar al productor?</h4>

@if (productorModel == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <EditForm Model="@productorModel" OnValidSubmit="EliminarProductor">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <label>Nombres</label>
                    <InputText @bind-Value="productorModel.Nombres" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Apellidos</label>
                    <InputText @bind-Value="productorModel.Apellidos" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Cedula</label>
                    <InputText @bind-Value="productorModel.Cedula" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Anio nacimiento</label>
                    <InputDate @bind-Value="productorModel.AnioNacimiento" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Genero</label>
                    <InputSelect @bind-Value="productorModel.Genero" class="form-control">
                        <option value="Femenino">Femenino</option>
                        <option value="Masculino">Masculino</option>
                    </InputSelect>
                </div>
                <div class="form-group">
                    <input type="submit" class="btn btn-danger" value="Eliminar productor" />
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    ProductorModel productorModel = new();
    HttpClient http = new();

    protected override async Task OnInitializedAsync()
    {
        http.BaseAddress = new Uri("https://localhost:5001");

        productorModel = await http.GetFromJsonAsync<ProductorModel>($"Api/Productor/SeleccionarId/{Id}");
    }


    private async Task EliminarProductor()
    {
        var response = await http.DeleteAsync($"/Api/Productor/Eliminar/{productorModel.ProductorId}");

        navigation.NavigateTo("/Principal");
    }

}



@page "/Principal"
@using Models
@inject NavigationManager navigation

<h3>Lista de productores</h3>

@if (_lst == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div>
        <button class="btn btn-success" @onclick="CrearProductor">Nuevo</button>
    </div>

    <table class="table table-hover">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombres</th>
                <th>Apellidos</th>
                <th>Cedula</th>
                <th>Año Nacimiento</th>
                <th>Edad</th>
                <th>Tipo Edad</th>
                <th>Genero</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _lst)
            {
            <tr>
                <td>@item.ProductorId</td>
                <td>@item.Nombres</td>
                <td>@item.Apellidos</td>
                <td>@item.Cedula</td>
                <td>@item.AnioNacimiento</td>
                <td>@item.Edad</td>
                <td>@item.TipoEdad</td>
                <td>@item.Genero</td>
                <td>
                    <button class="btn btn-info" @onclick="(() => ActualizarProductor(item.ProductorId.Value))">
                        Editar
                    </button>
                </td>
                <td>
                    <button class="btn btn-danger" @onclick="(() => EliminarProductor(item.ProductorId.Value))">
                        Eliminar
                    </button>
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    List<ProductorModel> _lst = new();
    ProductorModel productorModel = new();
    HttpClient http = new();

    protected override async Task OnInitializedAsync()
    {
        http.BaseAddress = new Uri("https://localhost:5001");
        _lst = await http.GetFromJsonAsync<List<ProductorModel>>("/Api/Productor/Seleccionar");
    }

    private void CrearProductor()
    {
        navigation.NavigateTo("/ProductorInsertar");
    }

    private void ActualizarProductor(int id)
    {
        navigation.NavigateTo($"ProductorActualizar/{id}");
    }

    private void EliminarProductor(int id)
    {
        navigation.NavigateTo($"ProductorEliminar/{id}");
    }
}
